

=== wilderness_menu ===

{terrain == (): -> edit_terrain ->}

~ location = wilderness
~ back_menu = -> wilderness_menu


<b>{DisplayTerrain()} Menu</b> ({DisplayWeatherSummary()}) #CLEAR

<- base_travel_menu

+ [Continue On]
    -> travel_next -> wilderness_menu

+ [Roll Weather (Currently {DisplayWeather()})]
    -> weather -> wilderness_menu

+ [Roll for Encounter ({DisplayTerrain()})]
    -> wilderness_encounter_check ->->

+ [Roll for Unmarked Settlement]
    -> unmarked_settlement_check ->
    ~again = -> unmarked_settlement_check
    
+ [Camp for the Night]
    ~ time = night
    -> camping_menu -> wilderness_menu

+ [Back] -> main_menu

- (sub_menu)
+ [Again] -> again -> sub_menu
+ [Back] -> wilderness_menu


=== travel_next ===

// {terrain:
//     - arctic: 
// }

->->

= travel_arctic

~ roll = d100()

{
    - roll <= 60: Continuing arctic terrain 5 miles
    - roll <= 65: Icy hills (roll hills and interpret… arctically). {d4()} m.
    - roll <= 70: Small mountain range / foothills {d4()} m.
    - roll <= 75: Waterway (probably frozen) {d4()} m.
    - roll <= 80: Small Wood {d4()} m.
    - roll <= 85: Rocky outcrop {d4()} m.
    - roll <= 90: Unmarked Settlement
    - roll <= 95: {~Structure|Monument|Interesting landscape feature}
    - else: Monster Lair
}

->->

=== camping_menu ===

{terrain == (): -> edit_terrain ->}

~ back_menu = -> camping_menu

<b> {DisplayTerrain()} Camping Menu</b> ({DisplayWeatherSummary()})
    
+ Find Campsite Check
    -> find_campsite_check -> camping_menu
    ~again = -> find_campsite_check

+ Disturbances While Camping Check
    -> disturbance_while_camping_check -> camping_menu
    ~again = -> disturbance_while_camping_check

+ [Back]

- ->->

=== weather ===
-> roll_weather ->
The weather in {DisplayTerrain()} is now "{current_weather}".
->->


=== roll_weather ===
{terrain == ():-> edit_terrain ->}
{season == (): -> edit_season ->}


{terrain:
    - mountain: ~ bonus = -5
    - desert: ~ bonus = 5
    - else: ~ bonus = 0
}

~ roll = d20()
~ result = roll + bonus

{season:
    - summer:
        {
            - result <= 1: ~ current_weather = "Unseasonably Cold"
            - result <= 4: ~ current_weather = "Rainy"
            - result <= 8: ~ current_weather = "Overcast"
            - result <= 11: ~ current_weather = "Clear, Warm"
            - result <= 18: ~ current_weather = "Clear, Hot"
            - else: ~ current_weather = "Very Hot"
        }
    - autumn:
        {
            - result <= 1: ~ current_weather = "Sleet/Blizzard"
            - result <= 4: ~ current_weather = "Rainy"
            - result <= 8: ~ current_weather = "Light Rain"
            - result <= 11: ~ current_weather = "Overcast"
            - result <= 18: ~ current_weather = "Clear"
            - else: ~ current_weather = "Hot"
        }
    - winter:
        {
            - result <= 1: ~ current_weather = "Heavy Snow"
            - result <= 4: ~ current_weather = "Snowstorm"
            - result <= 8: ~ current_weather = "Rainy"
            - result <= 11: ~ current_weather = "Overcast"
            - result <= 18: ~ current_weather = "Clear"
            - else: ~ current_weather = "Unseasonably Warm"
        }
    - spring:
        {
            - result <= 1: ~ current_weather = "Sleet/Blizzard"
            - result <= 4: ~ current_weather = "Rainy"
            - result <= 8: ~ current_weather = "Overcast"
            - result <= 11: ~ current_weather = "Clear"
            - result <= 18: ~ current_weather = "Warm"
            - else: ~ current_weather = "Hot"
        }
}
-
->->



=== create_structure ===
~ roll = d100()

{
    - roll <= 4: Mine ({P(10):inhabited|deserted})
    - roll <= 8: {~Cemetary|Tomb} {P(30):({~haunted|undead})}
    - roll <= 12: Small {~Castle|Keep} ({P(30):{~deserted|monster-inhabited}|inhabited})
    - roll <= 16: Manor House ({inhabited|deserted})
    - roll <= 20: Monastery ({P(90):inhabited|deserted})
    - roll <= 24: {~Shrine|Temple} ({humanoid inhabitants|deserted})
    - roll <= 28: Watchtower ({~{~monster-|}inhabited|deserted})
    - roll <= 32: Farm House ({P(80):inhabited{P(5): and under attack!}|deserted}) 
    - roll <= 36: Fence (Q/A roll/nature roll to determine purpose)
    - roll <= 40: Windmill
    - roll <= 44: Watermill ({GetWaterway()})
    - roll <= 48: Old Well {P(50):({~hidden cave|tunnel at bottom}{P(30): with clue})|{P(30):(clue)}}
    - roll <= 52: Hermit {~Hut|Cave} ({P(70):inhabited|deserted}{P(40): with clue})
    - roll <= 56: Lone {~Tavern|Inn} ({P(90):inhabited|abandoned}, Q/A to discern more)
    - roll <= 60: {~Hunting Cabin|Fishing Hut on {{GetWaterway()}|{GetLake()}}} ({P(25):inhabited|empty}, Q/A to determine if it has supplies)
    - roll <= 64: {Hideout|Bunker} (DC 16 to notice, advantage if in familiar terrain)
    - roll <= 68: Waypoint ({P(75):friendly|neutral}, stopoff for couriers/horse trader, Q/A to discern more)
    - roll <= 72: Training Camp (Q/A to discern more)
    - roll <= 76: {~Small|Small|Medium|Large} Bridge (over {GetWaterway()})
    - roll <= 80: Medium Bridge (over {GetWaterway()})
    - roll <= 84: Large Bridge (over {GetWaterway()})
    - roll <= 88: Large {~Castle|Keep} ({P(20):monster-}inhabited)
    - roll <= 92: Ruins ({P(10):deadly encounter|{P(50):hard encounter|normalencounter}}{P(60): with clue})
    - roll <= 96: {~Burial Mounds|Barrows} (What lies beneath? Q/A to discern more.)
    - else: Wizard Tower (inhabited, {P(60):friendly|hostile})
}

->->


=== function GetWaterway() ===
~ roll = d100()

{
    - roll <= 50: ~ return "Stream /river running through {P(15):with waterfall nearby}."
    - roll <= 55: ~ return "Slightly larger river, might be difficult to ford."
    - roll <= 60: ~ return "A man-made waterway of some sort, irrigation channel perhaps?"
    - roll <= 65: ~ return "Deep but narrow stream. You see something float by! Dex check to grab it."
    - roll <= 70: ~ return "Large, unmapped river. Could be rideable in canoe."
    - roll <= 75: ~ return "Sizable river with pond areas. Probably quite good for fishing or swimming."
    - roll <= 80: ~ return "Sizable, unmapped river, spanned by bridge."
    - roll <= 85: ~ return "Meandering river with pier where small boats are tied up. Ferryman?"
    - roll <= 90: ~ return "This appears to be a drainage channel for a nearby settlement."
    - roll <= 95: ~ return "Humanoids or fey (elves? dryads?) frolicking in the water."
    - else: ~ return "Shallow brook... what’s that you see there amongst the pebbles?"
}

=== function GetLake() ===
~ roll = d100()

{
    - roll <= 50 : ~ return "Medium-sized lake, unmarked on map. Situated in {DisplayTerrain()}."
    - roll <= 55 : ~ return "Medium sized lake, small settlement somewhere on its shores."
    - roll <= 60 : ~ return "Smallish lake/pond/watering hole."
    - roll <= 65 : ~ return "Large, unmapped lake, with a waterway running out of it. Could be rideable in a canoe"
    - roll <= 70 : ~ return "Medium sized lake, small settlement somewhere on its shores."
    - roll <= 75 : ~ return "Large, unmapped lake, with small mountain range by its shores"
    - roll <= 80 : ~ return "Large lake with small woods on its shores"
    - roll <= 85 : ~ return "Medium-sized lakes with many boats"
    - roll <= 90 : ~ return "Small lake or pond, serves as a lair for some aquatic creature"
    - roll <= 95 : ~ return "Medium-sized lake, fish jumping DC 15 Survival check to catch a fish."
    - else: ~ return "Sacred pool of some sort. Magical in nature."
}

=== unmarked_settlement_check ===
{population == (): -> edit_population ->}

~ roll = d4()
~ chances = roll - 1
~ total = 0
~ count = 0

1d4-1 Chances: {chances} ({roll}🎲-1)


{chances <= 0:
    No unmarked settlements.
    ->->
}

{population:
    - pop_low: ~difficulty = 5
    - pop_medium: ~ difficulty = 10
    - pop_high: ~ difficulty = 20
    - else:
        ~ logError("Unknown population found: {population}.")
}

Based on {DisplayPopulation()} Population Density, each d100 check has a {difficulty}% chance.

- (try)

~ roll = d100()
~ bonus = 0
{DisplayResultTarget("{difficulty}%")}

{roll <= difficulty:
    ~ total++
}

~ count++
{count < chances:
    <>, <>
    -> try
}
<> rolled.

{total <= 0:
    No unmarked settlements.
    ->->
- else:
    You will come across {total} settlement{total > 1:s}.
}

~ count = 0

- (add_settlement)
~ count++
-> unmarked_settlement_table ->

{count < total:
    -> add_settlement
}

- 
->->


=== unmarked_settlement_table ===
{shuffle:
    - {~Large Camp|Caravan} ({P(25):abandoned|pop:{d20()}})
    - Cottage (pop:{d10()})
    - Large Encampment (pop:{RANDOM(50,100)})
    - Hamlet (pop:{RANDOM(50,150)})
    - Work Crew (pop:{RANDOM(50,200)})
    - Stationed Garrison (pop:{RANDOM(100,300)})
    - Fort (pop:{RANDOM(200,400)})
    - Village (pop:{RANDOM(300,1000)})
    - Encamped Army (pop:{RANDOM(1000,3000)})
    - Refugee Encampment (pop:{RANDOM(500,5000)})
}

- ->->


=== wilderness_encounter_check ===
{population == (): -> edit_population ->}

~ total = GetWildernessEncounterCheckCount()

Based on {DisplayPopulation()} population and traveling during the {DisplayTime()}, we will check {total} times.

-> RollD100Checks(total,25,0) ->

~ temp encounterCount = 0
~ temp encounterTotal = total

Encounters: {encounterTotal}

- (next_encounter)
{encounterCount >= encounterTotal: -> complete}
~ encounterCount++

Encounter \#{encounterCount}/{encounterTotal}

+ [Determine on Wilderness Table]
    -> wilderness_encounter_table ->
+ [Determine on Story Event Table]
    -> story_element_interaction_table ->
+ [Surprise Me]
    {shuffle:
        - -> wilderness_encounter_table ->
        - -> story_element_interaction_table ->
    }

- {encounterCount >= encounterTotal: -> complete}
+ [Next] -> next_encounter
+ [Cancel] -> back_menu

- (complete)

+ [Encounters Complete] -> back_menu


= no_encounter

No encounter.

{DisplayResultTarget("25%")}

->->


=== function GetWildernessEncounterCheckCount() ===
~ temp checkCount = 0

{population:
    - pop_low: ~ checkCount = 1
    - pop_medium: ~ checkCount = 2
    - pop_high: ~ checkCount = 3
    - else:
        ~logError("Unrecognized population. Assuming 'medium'.")
        ~ checkCount = 2
}

{time == day:
    ~ checkCount = checkCount * 2
}

~ return checkCount


=== create_place ===
{shuffle:
    - In this settlement/area
    - Just outside settlement
    - {d4()} miles away in a -> create_structure ->
    - In the nearby forest
    - In the nearby mountains
    - In the nearby swamp
    - In/beside the nearby body of water
    - In the next village
    - In the next large town
    - In the captial of the realm
    - In the next realm
}
- ->->


=== edit_terrain ===
{terrain:Current Terrain: {DisplayTerrain()}}
What terrain are you entering?

+ [Random]
    ~ terrain = LIST_RANDOM(LIST_ALL(terrain))

+ [Aquatic]
    ~ terrain = aquatic

+ [Coastal]
    ~ terrain = coastal

+ [Desert]
    ~ terrain = desert

+ [Forest]
    ~ terrain = forest

+ [Grasslands]
    ~ terrain = grass

+ [Hills]
    ~ terrain = hill

+ [Mountains/Ice Steppes]
    ~ terrain = mountain

+ [Swamps]
    ~ terrain = swamp


+ [Back]

-
-> roll_weather ->

Terrain is now {DisplayTerrain()}

{season:
    <> in {DisplaySeason()} ({DisplayWeather()})
}

->->

=== function DisplayTerrain() ===
{terrain:
    - (): ~ return "Unknown Terrain"
    - aquatic: ~ return "Aquatic"
    - coastal: ~ return "Coastal Wilderness"
    - desert: ~ return "Desert Wilderness"
    - forest: ~ return "Forest Wilderness"
    - grass: ~ return "Grassland Wilderness"
    - hill: ~ return "Hill Wilderness"
    - mountain: ~ return "Mountain/Ice Steppes"
    - swamp: ~ return "Swamp Wilderness"
    - else: ~ return "Invalid Setting"
}

=== function DisplayWeather() ===
~ return current_weather


=== function DisplayWeatherSummary() ===
{
    - time == ():
        ~ return "Unknown Weather/Season/Time"
    - season == ():
        ~ return DisplayTime()
    - else:
        ~ return "{DisplayWeather()} {DisplaySeason()} {DisplayTime()}"
}


=== edit_season ===
Current Season: {DisplaySeason()}
What season is it?

+ [Random]
    ~ season = LIST_RANDOM(LIST_ALL(season))
+ [Summer]
    ~ season = summer
+ [Autumn]
    ~ season = autumn
+ [Winter]
    ~ season = winter
+ [Spring]
    ~ season = spring
+ [Back] ->->

-
-> roll_weather ->
Current Season: {DisplaySeason()}
->->


=== function DisplaySeason() ===
{season:
    - (): ~ return "Unknown Season"
    - summer: ~ return "Summer"
    - autumn: ~ return "Autumn"
    - winter: ~ return "Winter"
    - spring: ~ return "Spring"
    - else: ~ return "Invalid Setting"
}


=== edit_population ===
Current Population Density: {DisplayPopulation()}
How dense is the population in {DisplayTerrain()}?

+ [Random]
    {shuffle:
        - ~ population = pop_low
        - ~ population = pop_medium
        - ~ population = pop_high
    }
+ [Low]
    ~ population = pop_low
+ [Medium]
    ~ population = pop_medium
+ [High]
    ~ population = pop_high
+ [Back] ->->

- Current Population Density: {DisplayPopulation()}
->->


=== function DisplayPopulation() ===
{population:
    - (): ~ return "Unknown Population Density"
    - pop_low: ~ return "Low"
    - pop_medium: ~ return "Medium"
    - pop_high: ~ return "High"
    - else: ~ return "Invalid Setting"
}


=== wilderness_event ===

{shuffle:
    - Landslide / Avalanche
    - Earthquake
    - Storm
    - Druid gathering
    - Religious pilgrimage
    - Army encamped
    - Sudden storm / gale force winds
    - Overturned cart
    - Flash flood
    - Forest Fire
    - Local humanoids having a festival
    - Solar eclipse
    - Hail (large hailstones?)
    - Hurricane
    - Tribal encounter
    - Animal stampede
    - Tree falls
    - Boulder falls
    - Unseasonable weather
    - Lightning strikes
    - Market
    - Hunting Party
    - Farmers harvesting crops
    - Cart passing
    - Refugees
    - Massed Animals -> create_creature ->
    - Toll demanded
    - Distressed -> create_npc ->
    - Besieged settlement -> unmarked_settlement_table ->
    - Come across <> -> create_structure ->
    - Battle in progress
    - Carcass of a {~ -> create_creature ->|->create_single_monster ->}
    - Monster - easy encounter
    - Monster - easy encounter
    - Monster - medium encounter
    - Monster - medium encounter
    - Monster - hard encounter
    - Monster - deadly encounter
    - Volcanic eruption
    - Plague (insect / vermin)
    - Interdimensional Rift
    - Army going to war
    - Sinkhole Appears
    - Appearance of Tyrant in the area
    - Savage raiding party
    - Marauding monster attacking village
    - Undead awakening
    - -> unmarked_settlement_table ->
    - -> unmarked_settlement_table ->
    - -> unmarked_settlement_table ->
}
->->


=== wilderness_encounter_table ===
~ roll = d100()

{
    - roll <= 4: Small dungeon or crypt found. Purpose and history unknown.
        -> ask_dungeon ->
    - roll <= 5: Ready-made camp found, or cosy cave, that could potentially be used as shelter for the night, or a base while exploring. Inhabited?
    - roll <= 6: A small creek, babbling pleasantly. Or a large crack, bubbling pungently.
    - roll <= 7: A storm on the horizon, lightning dancing underneath dark grey clouds.
    - roll <= 8: A sinkhole has opened up nearby.
    - roll <= 9: Abandoned, empty town.
    - roll <= 15: NPC met, who gives PC information about possible quest. Go to Chapter 7 and generate a quest, which you may or may not choose to accept.
    - roll <= 16: Abandoned campsite found. Use Q/A rolls to find out more.
    - roll <= 17: A tree with what looks like Druid markings.
    - roll <= 18: You find survivors of some sort of attack, and they have a tale to tell...
    - roll <= 19: Plundered barrow / burial mound. But did they get everything? And what still waits there? ({P(50):mostly empty|occupied})
    - roll <= 20: On the road, a dropped item. A backpack, a purse with interesting contents / a hat with a note tucked inside / an engraved ring… could be anything. Use Q/A roll to find out details.
    - roll <= 21: Interesting traveller. This character has obviously seen some things...
    - roll <= 22: Cemetery. Some of the graves have been looted, and most of the tombstones are so old that the names have worn off.
    - roll <= 23: Prisoner(s) being escorted in a heavily-armoured cart.
    - roll <= 24: Interesting geological feature. Use Q/A mechanic to find out what.
    - roll <= 25: You find a discarded backpack with some intriguing contents.
    - roll <= 26: An odd noise is coming from some distance ahead...
    - roll <= 27: Strange lights in the nearby hills are attracting your attention.
    - roll <= 28: You stumble across an orchard, filled with ripe and delicious fruit. The owner is nowhere in sight.
    - roll <= 29: Bounty hunters, searching for a fugitive. “You seen anyone?” (Who they are working for is unclear)
    - roll <= 30: Sudden and abrupt change in weather
    - roll <= 31: Abandoned mine, dwarven or otherwise.
    - roll <= 32: You hear howling in the distance. It could be wolves, but the sound is strange somehow...
    - roll <= 33: Debris from a recent, large battle. Who fought here, and who won? How recent was this?
    - roll <= 34: Humanoid corpse. {P(25): You find a clue. (see Clue table in Chapter 9).}
    - roll <= 35: A bird (or some other creature – roll Creature Table Chapter 14) begins talking to you, in fluent Common! And not just mindless parroting...
    - roll <= 36: A royal/noble personage and their entourage passes in an opulent carriage.
    - roll <= 37: A flock of birds (vultures? ravens?) circles over a point somewhere overhead
    - roll <= 38: You find an old, ruined monument. Is it to a god, a famous local figure, or something else?
    - roll <= 39: A traveller with information/warning about a situation in the next settlement.
    - roll <= 40: Unmarked settlement: town/village/hamlet. Human?
    - roll <= 41: You reach a bridge over a small river. The bridge is washed out. Travellers are waiting here, unsure what to do.
    - roll <= 42: You find an injured beast
    - roll <= 43: A farmer invites you into his house for a meal, and possibly some of his home brew ale/mead as well
    - roll <= 44: Overturned/broken-down cart. Is it attended?
    - roll <= 50: Monster ambush. Level-appropriate easy encounter. Go to Chapter 16.
    - roll <= 51: An animal wanders across your path. It glances up at you but doesn’t seem particularly bothered by your presence.
    - roll <= 52: Trapped creature (humanoid? monster? What type of trap?)
    - roll <= 55: An abandoned/ruined structure of some kind, which may or may not have a subterranean component.
    - roll <= 56: An old hermit. What’s he babbling about?
    - roll <= 57: A creepy and unsettling token/sign.
    - roll <= 58: Traveling merchant
    - roll <= 59: A traveling adventurer who is impressed and wants to join your party.
    - roll <= 65: Monster Encounter: Level-appropriate medium encounter. Go to Chapter 16.
    - roll <= 66: A traveller, resting by the side of the road, begins pointing and laughing uproariously at you. Are they mad?
        -> create_npc ->
    - roll <= 67: Heavily-guarded transport passes.
    - roll <= 68: Travelling sage/archivist
    - roll <= 69: Bandits (human or otherwise) demand a toll from you.
    - roll <= 75: Monster: Level appropriate hard encounter.
    - roll <= 76: A starving family begging for food or gold
    - roll <= 77: A tribe who owns the land demands a tribute from you for passage (and in return will escort you through – whether you like it or not).
    - roll <= 78: A travelling troupe of performers ({P(80):Friendly|Unfriendly})
    - roll <= 79: A travelling merchant, but his wares are not the ordinary. Indeed, much of it is illegal in some way. Is he a smuggler? A drug dealer? A heist thief?
    - roll <= 80: Hunters/travellers/adventurers. Camped up and relaxing.
    - roll <= 81: You see a low rocky hill, where faces have been carved into the rocks, along with the shapes of various beasts. It is artfully done, and seems to tell some sort of story.
    - roll <= 82: You see a track leading away from the road and into the forest/hills. Who knows where it leads...
    - roll <= 83: Bandits waylay you and demand all your money
    - roll <= 84: On a lonely stretch of road, you see a lone cabin, but cannot tell if it is inhabited or not.
    - roll <= 85: A long-forgotten battlefield. How many died here?
    - roll <= 86: A tower, visible off the road some distance.
    - roll <= 87: Patrol from the nearest settlement
    - roll <= 88: Unmarked settlement
    - roll <= 89: The road disappears and the place looks nothing like on the map.
    - roll <= 94: NPC appears with quest. (Use Chapter 7).
        -> create_npc ->
        -> create_quest ->
    - roll <= 100: Monster! Level-appropriate {~hard|hard|hard|<i>deadly</i>} encounter.
}

->->

= ask_dungeon
    + [Enter Dungeon]
        ~ ResetDungeon()
        ~ dungeon_size = dng_small
        -> dungeon_menu ->->
    + [Continue] ->->


